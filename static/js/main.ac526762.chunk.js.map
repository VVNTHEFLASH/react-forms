{"version":3,"sources":["components/form.jsx","App.js","index.js"],"names":["Form","props","switchToPersonal","setState","category","step","console","log","state","switchToBusiness","changeCourtryHandler","e","country","target","value","renderCategory","className","onClick","renderFormOne","type","placeholder","onInput","onchangeFirstName","onchangeLastName","onchangeEmail","onchangePhoneNumber","onchangeBusinessName","personal","firstName","lastName","business","businessName","email","phoneNumber","renderFormTwo","currency","name","id","onChange","defaultChecked","onchangeIFSCcode","required","onchangeAccountNo","checked","IFSC_code","account_Number","renderFormThree","onchangeCountryID","onchangeCity","onchangePostcode","onchangeAddress","Country_Id","city","postcode","address","nextBtn","preventDefault","prevBtn","submitBtn","Country","this","Component","App","Fragment","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac526762.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"../components/form.css\";\r\n\r\nexport default class Form extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            personal: {\r\n                firstName: \"\",\r\n                lastName: \"\",\r\n                email: \"\",\r\n                phoneNumber: \"\",\r\n                Country: \"\",\r\n                IFSC_code: \"\",\r\n                account_Number: \"\",\r\n                Country_Id: \"\",\r\n                city: \"\",\r\n                postcode: \"\",\r\n                address: \"\",\r\n            },\r\n            business: {\r\n                businessName: \"\",\r\n                email: \"\",\r\n                phoneNumber: \"\",\r\n            },\r\n            category: \"Personal\",\r\n            step: 1,\r\n            country: \"IN\",\r\n        }\r\n    }\r\n\r\n    switchToPersonal = () => {\r\n        this.setState({ category: \"Personal\", step: 1 });\r\n        console.log(this.state.category);\r\n    }\r\n    \r\n    switchToBusiness = () => {\r\n        this.setState({ category: \"Business\", step: 1 });\r\n        console.log(this.state.category);\r\n    }\r\n\r\n    changeCourtryHandler = (e) => {\r\n        this.setState({ country: e.target.value })\r\n    }\r\n\r\n    renderCategory = () => {\r\n        let step = this.state.step;\r\n        if(step === 1) {\r\n            return(\r\n                <div className='category'>\r\n                    <div className={this.state.category === \"Personal\" ? \"active\" : \"switch\"}\r\n                        onClick={this.switchToPersonal}>\r\n                        Personal\r\n                    </div>\r\n                    <div className={this.state.category === \"Business\" ? \"active\" : \"switch\"}\r\n                        onClick={this.switchToBusiness}>\r\n                        Business\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return <div></div>;\r\n        }\r\n    }\r\n\r\n    renderFormOne = () => {\r\n        let category = this.state.category;\r\n        if(category === \"Personal\") {\r\n            return(\r\n                <div className='formOne'>\r\n                    <input type=\"text\" placeholder='First Name'\r\n                    onInput={this.onchangeFirstName} />\r\n                    <input type=\"text\" placeholder='Last Name'\r\n                    onInput={this.onchangeLastName} />\r\n                    <input type=\"text\" placeholder='Email'\r\n                    onInput={this.onchangeEmail} />\r\n                    <input type=\"text\" placeholder='Phone Number'\r\n                    onInput={this.onchangePhoneNumber} />\r\n                </div>\r\n            );\r\n        }\r\n        else if(category === \"Business\"){\r\n            return(\r\n                <div className='formOne'>\r\n                    <input type=\"text\" placeholder='Business Name'\r\n                    onInput={this.onchangeBusinessName} />\r\n                    <input type=\"text\" placeholder='Email'\r\n                    onInput={this.onchangeEmail}/>\r\n                    <input type=\"text\" placeholder='Phone Number'\r\n                    onInput={this.onchangePhoneNumber}/>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    onchangeFirstName = (e) => {\r\n        this.setState({ \r\n            personal: { ...this.state.personal, firstName: e.target.value },\r\n        })\r\n    }\r\n\r\n    onchangeLastName = (e) => {\r\n        this.setState({ \r\n            personal: { ...this.state.personal, lastName: e.target.value },\r\n        })\r\n    }\r\n\r\n    onchangeBusinessName = (e) => {\r\n        this.setState({\r\n            business: { ...this.state.business, businessName: e.target.value },\r\n        })\r\n    }\r\n\r\n    onchangeEmail = (e) => {\r\n        if(this.state.category === \"Personal\"){\r\n            this.setState({\r\n                personal: { ...this.state.personal, email: e.target.value },\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                business: { ...this.state.business, email: e.target.value },\r\n            })\r\n        }\r\n    }\r\n\r\n    onchangePhoneNumber = (e) => {\r\n        if(this.state.category === \"Personal\"){\r\n            this.setState({\r\n                personal: { ...this.state.personal, phoneNumber: e.target.value },\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                business: { ...this.state.business, phoneNumber: e.target.value },\r\n            })\r\n        }\r\n    }\r\n    renderFormTwo = () => {\r\n        let country = this.state.country;\r\n        let currency;\r\n        if(country === \"IN\") {\r\n            currency = \"Indian rupee(INR)\";\r\n            return(\r\n                <div className='formTwo'>\r\n                    <div className='tag'>\r\n                        <p className='tag-head'>Country</p>\r\n                        <select name=\"country\" id=\"country\" onChange={this.changeCourtryHandler}>\r\n                            <option value=\"IN\" defaultChecked>India</option>\r\n                            <option value=\"USA\">United States of America</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='tag'>\r\n                        <p className='tag-head'>Currency</p>\r\n                        <p>{currency}</p>\r\n                    </div>\r\n                    <div className='tag'>\r\n                        <p className='tag-head'>Bank details format</p>\r\n                        <p>Indian local</p>\r\n                    </div>\r\n                    <div className='tag' id='tag-child'>\r\n                        <input type=\"text\" placeholder='IFSC code' \r\n                        onChange={this.onchangeIFSCcode}\r\n                        required />\r\n                        <input type=\"text\" placeholder='Account Number'\r\n                        onChange={this.onchangeAccountNo}\r\n                        required />\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            currency = \"United Stated doller(USD)\";\r\n            return(\r\n                <div className='formTwo'>\r\n                    <div className='tag'>\r\n                        <p className='tag-head'>Country</p>\r\n                        <select name=\"country\" id=\"country\" onChange={this.changeCourtryHandler}>\r\n                            <option value=\"IN\">India</option>\r\n                            <option value=\"USD\" defaultChecked>United States of America</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='tag'>\r\n                        <p className='tag-head'>Currency</p>\r\n                        <p>{currency}</p>\r\n                    </div>\r\n                    <div className='tag'>\r\n                        <p className='tag-head'>Bank details format</p>\r\n                        <input type=\"radio\" name=\"bank\" id=\"local\" checked=\"checked\" />Local bank details \r\n                        <input type=\"radio\" name=\"bank\" id=\"swift\" />SWIFT code\r\n                    </div>\r\n                    <div className='tag' id='tag-child'>\r\n                        <input type=\"text\" placeholder='ACH routing number'\r\n                        onChange={this.onchangeIFSCcode} />\r\n                        <input type=\"text\" placeholder='Account number'\r\n                        onChange={this.onchangeAccountNo} />\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    onchangeIFSCcode = e => {\r\n        this.setState({\r\n            personal: { ...this.state.personal, IFSC_code: e.target.value },\r\n        })\r\n    }\r\n\r\n    onchangeAccountNo = e => {\r\n        this.setState({\r\n            personal: { ...this.state.personal, account_Number: e.target.value },\r\n        })\r\n    }\r\n    renderFormThree = () => {\r\n        let country = this.state.country;\r\n        return(\r\n            <div className='formOne'>\r\n                <input type=\"text\" placeholder={country}\r\n                onChange={this.onchangeCountryID} />\r\n                <input type=\"text\" placeholder='City'\r\n                onChange={this.onchangeCity} />\r\n                <input type=\"text\" placeholder='Post code'\r\n                onChange={this.onchangePostcode} />\r\n                <input type=\"text\" placeholder='Address'\r\n                onChange={this.onchangeAddress} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onchangeCountryID = e => {\r\n        this.setState({\r\n            personal: { ...this.state.personal, Country_Id: e.target.value },\r\n        })\r\n    }\r\n\r\n    onchangeCity = e => {\r\n        this.setState({\r\n            personal: { ...this.state.personal, city: e.target.value },\r\n        })\r\n    }\r\n    \r\n    onchangePostcode = e => {\r\n        this.setState({\r\n            personal: { ...this.state.personal, postcode: e.target.value },\r\n        })\r\n    }\r\n    \r\n    onchangeAddress = e => {\r\n        this.setState({\r\n            personal: { ...this.state.personal, address: e.target.value },\r\n        })\r\n    }\r\n    \r\n    nextBtn = (e) => {\r\n        let step = this.state.step;\r\n        if(step < 3){\r\n            this.setState({ step: step + 1 });\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    prevBtn = (e) => {\r\n        let step = this.state.step;\r\n        if(step > 1){\r\n            this.setState({ step: step - 1 })\r\n            e.preventDefault();\r\n        }\r\n    }\r\n    submitBtn = (e) => {\r\n        console.log(this.state);\r\n        e.preventDefault();\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className='form-container'>\r\n            <form className='form'>\r\n                <div className='step'>\r\n                    <div className='stepName'>\r\n                        <p className={this.state.step <= 3 ? \"stepActive\" : \"circle\"}>\r\n                            {this.state.step < 2 ? \"1\" : \"✔\"}\r\n                        </p>\r\n                        <p>Beneficiary</p>\r\n                    </div>\r\n                    <div className=\"dash\">\r\n                        _______________\r\n                    </div>\r\n                    <div className='stepName'>\r\n                        <p className={this.state.step > 1 && this.state.step <= 3 ? \"stepActive\" : \"circle\"}>\r\n                            {this.state.step < 3 ? \"2\" : \"✔\"}\r\n                        </p>\r\n                        <p>BankDetails</p>\r\n                    </div>\r\n                    <div className=\"dash\">\r\n                        _______________\r\n                    </div>\r\n                    <div className='stepName'>\r\n                        <p className={this.state.step === 3 ? \"stepActive\" : \"circle\"}>\r\n                            {this.state.step < 4 ? \"3\" : \"✔\"}\r\n                        </p>\r\n                        <p>Address</p>\r\n                    </div>\r\n                    <div className='gb'>\r\n                        <span>GB</span>\r\n                    </div>\r\n                </div>\r\n                {/* render catogory */}\r\n                {this.renderCategory()}\r\n                { this.state.step === 1 ? this.renderFormOne()\r\n                : this.state.step === 2 ? this.renderFormTwo()\r\n                : this.renderFormThree() }\r\n\r\n                <div className='button'>\r\n                    {this.state.step > 1 ? (\r\n                        <button type=\"submit\"\r\n                        onClick={this.prevBtn}\r\n                        className='prevBtn'>Prev</button>\r\n                    ): \"\"}\r\n                    {this.state.step === 3 ? (\r\n                        <button type=\"submit\" \r\n                        onClick={this.submitBtn}\r\n                        className=\"nextBtn\">Submit</button>\r\n                    ): (\r\n                        <button type=\"submit\"\r\n                        onClick={this.nextBtn}\r\n                        className=\"nextBtn\">Next</button>\r\n                    )}\r\n                </div>\r\n            </form>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n// Found Bug in Onchange Event\r\n// Autofilling the Forms is Problem\r\n","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport React from 'react';\nimport Form from './components/form';\n// import Business from './components/signup';\n// import Linker from \"./components/Linker\";\n// import Personal from './components/personal';\n\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Router>\n      <div className='App'>\n          {/* <Linker></Linker>\n       <Switch>\n        <Route exact path='/'>\n          <Personal/>\n        </Route>\n        <Route path='/personal'>\n          <Personal/>\n        </Route>\n        <Route path='/signup'>\n          <Business/>\n        </Route>\n      </Switch> */}\n        <Switch>\n          <Route path=\"/\">\n            <Form />\n          </Route>\n        </Switch>\n      </div>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}